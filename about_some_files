=== UNITS
Units that are identical for both projects (PapajScript files):
– Unit2.pas (the main engine of PS)
– UnitEntity.pas (PS's entities, variables, settings and some constants)
– UnitFunctions.pas (PS's built-in functions)
– UnitStack.pas (PS's semi-stack)
– UnitEnvironment.pas (PS environment and interpreter main mechanisms)

Units that are identical for both projects (not PapajScript files):
– ConsoleUtils.pas (a better Crt substitute for Unix systems)

Units that exist in both projects, but they differ slightly in each of them.
– Unit5.pas (A connector between the console output or GUI and PS language)

Additional units of rpn_console
– UnitREPL.pas (REPL of PapajScript)

Additional units of rpn_gui
– Unit1.pas (the GUI application code)
– Unit3.pas (the language files)
– Unit4.pas (an additional unit to support Unit5.pas, i.e. the connector between GUI and PS language)


=== REQUIREMENTS TO COMPILE THE PROJECT
– Have installed Lazarus IDE (version 1.6 or higher recommended – I use Lazarus 2.0.4 as of now)
– There are two ways to build RPN Calculator
    a) compile it using Lazarus IDE by clicking "Run" or "Compile"
    c) simply run compile.sh (in Unix/Linux systems) or compile.bat (in Windows systems) to compile the project
– You can make a Desktop shortcut to a RPN REPL by running installREPL.sh (Unix/Linux) or installREPL.bat (Windows)


=== REPORTED FLAWS
– The variables' scopes don't work always properly.
– Windows systems' shell usage does not work
– Non-linear recursion does not work



===========================================
RPN Calculator – PapajScript Interpreter
Paul Lipkowski, 8/12/2020
