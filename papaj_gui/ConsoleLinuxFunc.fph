'Console.CPUNames' : begin
    for index := 0 to getRealCPUThreads()-1 do
        stack_push(env.Stack[env.Settings.StackPointer], buildString(getCPUName(index)));
end;
'Console.CPUThreads' : begin
    stack_push(env.Stack[env.Settings.StackPointer], buildNumber(getRealCPUThreads()));
end;
'Console.CPUBaseFreqs' : begin
    for index := 0 to getRealCPUThreads()-1 do
        stack_push(env.Stack[env.Settings.StackPointer], buildNumber(getCPUBaseFreq(index)));
end;
'Console.UserShell' : begin
    stack_push(env.Stack[env.Settings.StackPointer], buildString(getShell()));
end;
'Console.CPUMaxFreqs' : begin
    for index := 0 to getRealCPUThreads()-1 do
        stack_push(env.Stack[env.Settings.StackPointer], buildNumber(getCPUMaxFreq(index)));
end;
'Console.CPUMinFreqs' : begin
    for index := 0 to getRealCPUThreads()-1 do
        stack_push(env.Stack[env.Settings.StackPointer], buildNumber(getCPUMinFreq(index)));
end;
'Console.CPUCurrentFreqs' : begin
    for index := 0 to getRealCPUThreads()-1 do
        stack_push(env.Stack[env.Settings.StackPointer], buildNumber(getCPUCurFreq(index)));
end;
'Console.CPUCurFreqs' : begin
    for index := 0 to getRealCPUThreads()-1 do
        stack_push(env.Stack[env.Settings.StackPointer], buildNumber(getCPUCurFreq(index)));
end;
'Console.CPUUsages' : begin
    for index := 0 to getRealCPUThreads()-1 do
        stack_push(env.Stack[env.Settings.StackPointer], buildNumber(getCPUUsage(index)));
end;
'Console.CPUAllUsage' : begin
    stack_push(env.Stack[env.Settings.StackPointer], buildNumber(getCPUUsage()));
end;
'Console.CPUUptime' : begin
    stack_push(env.Stack[env.Settings.StackPointer], buildNumber(getUptime()));
end;
'Console.RAMTotal' : begin
    stack_push(env.Stack[env.Settings.StackPointer], buildNumber(getRAMTotal()));
end;
'Console.RAMUsage' : begin
    stack_push(env.Stack[env.Settings.StackPointer], buildNumber(getRAMUsage()));
end;
'Console.RAMFree' : begin
    stack_push(env.Stack[env.Settings.StackPointer], buildNumber(getRAMFree()));
end;
'Console.RAMAvailable' : begin
    stack_push(env.Stack[env.Settings.StackPointer], buildNumber(getRAMAvailable()));
end;
'Console.SwapTotal' : begin
    stack_push(env.Stack[env.Settings.StackPointer], buildNumber(getSwapTotal()));
end;
'Console.SwapUsage' : begin
    stack_push(env.Stack[env.Settings.StackPointer], buildNumber(getSwapUsage()));
end;
'Console.SwapFree' : begin
    stack_push(env.Stack[env.Settings.StackPointer], buildNumber(getSwapFree()));
end;
'Console.ScreenResolution' : begin
    stack_push(env.Stack[env.Settings.StackPointer], buildString(getScreenResolution()));
end;
'Console.ScreenWidth' : begin
    stack_push(env.Stack[env.Settings.StackPointer], buildNumber(getScreenWidth()));
end;
'Console.ScreenHeight' : begin
    stack_push(env.Stack[env.Settings.StackPointer], buildNumber(getScreenHeight()));
end;