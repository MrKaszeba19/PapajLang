//function getCPUName() : String;
function getCPUName(index : LongInt) : String;
var
    CompileCommand: string='';
    Registry: TRegistry;
begin
    Registry := TRegistry.Create;
    try
        // Navigate to proper "directory":
        Registry.RootKey := HKEY_LOCAL_MACHINE;
        //if Registry.OpenKeyReadOnly('\SOFTWARE\Classes\InnoSetupScriptFile\shell\Compile\Command') then
        if Registry.OpenKeyReadOnly('\HARDWARE\DESCRIPTION\System\CentralProcessor\'+IntToStr(index)) then
            //CompileCommand:=Registry.ReadString(''); //read the value of the default name
            CompileCommand:=Registry.ReadString('ProcessorNameString'); //read the value of the default name
    finally
        Registry.Free;  // In non-Windows operating systems this flushes the reg.xml file to disk
    end;
    Result := CompileCommand;
end;

function getCPUBaseFreq(index : LongInt) : Extended;
var
    CompileCommand: string='';
    Registry: TRegistry;
    fl : LongInt;
begin
    Registry := TRegistry.Create;
    try
        Registry.RootKey := HKEY_LOCAL_MACHINE;
        if Registry.OpenKeyReadOnly('\HARDWARE\DESCRIPTION\System\CentralProcessor\'+IntToStr(index)) then
            fl := Registry.ReadInteger('~MHz');  
    finally
        Registry.Free; 
    end;
    Result := fl;
end;

function getRealCPUThreads() : LongInt;
begin
    Result := GetCPUCount;
    //Result := sysconf(83); 
end;